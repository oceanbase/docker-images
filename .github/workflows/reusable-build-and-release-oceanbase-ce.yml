name: build and release oceanbase-ce

on:
  workflow_call:
    inputs:
      version:
        required: true
        type: string
      cache_key:
        required: false
        type: string
      push-images:
        required: false
        type: boolean
      push-lts-images:
        required: false
        type: boolean

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    steps:
      - name: Free disk space on Ubuntu runner
        uses: kfir4444/free-disk-space@main
        with:
          tool-cache: false
          android: true
          dotnet: true
          haskell: true
          large-packages: true
          swap-storage: true

      - name: Print environment variables
        run: printenv

      - name: Check out repository code
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build pre image
        uses: docker/build-push-action@v6
        with:
          context: ./oceanbase-ce
          platforms: linux/amd64
          file: ./oceanbase-ce/Dockerfile.pre
          push: false
          load: true
          tags: oceanbase-ce-pre
          build-args: |
            VERSION=${{ inputs.version }}

      - name: Copy storage files
        run: |
          mkdir -p ./oceanbase-ce/share
          docker run -v ./oceanbase-ce/share:/root/share oceanbase-ce-pre

      - name: Build observer image
        if: ${{ inputs.push-images == false }}
        run: |
          cd oceanbase-ce
          docker buildx build --build-arg VERSION=${{ inputs.version }} --platform linux/amd64 -t oceanbase-ce:amd64 --load --output type=docker,dest=./oceanbase-ce-amd64.tar .
          docker buildx build --build-arg VERSION=${{ inputs.version }} --platform linux/arm64 -t oceanbase-ce:arm64 --load --output type=docker,dest=./oceanbase-ce-arm64.tar .

      - name: Upload artifact
        if: ${{ inputs.push-images == false }}
        uses: actions/upload-artifact@v4
        with:
          name: ${{ inputs.cache_key }}
          path: oceanbase-ce/oceanbase-ce-**.tar

      - name: Log in to Docker hub
        if: ${{ inputs.push-images }}
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Log in to Quay io
        if: ${{ inputs.push-images }}
        uses: docker/login-action@v3
        with:
          registry: quay.io
          username: ${{ secrets.QUAY_IO_USERNAME }}
          password: ${{ secrets.QUAY_IO_PASSWORD }}

      - name: Log in to Ghcr io
        if: ${{ inputs.push-images }}
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set image tags
        if: ${{ inputs.push-images }}
        id: set_image_tags
        run: |
          image_tags="ghcr.io/${{ github.repository_owner }}/oceanbase-ce:${{ inputs.version }}"
          image_tags="${image_tags}, ${{ env.DOCKER_PUSH_BASE }}/oceanbase-ce:${{ inputs.version }}"
          image_tags="${image_tags}, quay.io/${{ env.QUAY_IO_PUSH_BASE }}/oceanbase-ce:${{ inputs.version }}"
          
          if [[ "${{ inputs.push-lts-images }}" == "true" ]]; then
            lts_version="$(echo ${{ inputs.version }} | grep -P '(\d*\.\d*\.\d*)' --only-matching)"
            lts_tag="${lts_version}-lts"
          
            image_tags="${image_tags}, ghcr.io/${{ github.repository_owner }}/oceanbase-ce:${lts_tag}"
            image_tags="${image_tags}, ${{ env.DOCKER_PUSH_BASE }}/oceanbase-ce:${lts_tag}"
            image_tags="${image_tags}, quay.io/${{ env.QUAY_IO_PUSH_BASE }}/oceanbase-ce:${lts_tag}"
          
            image_tags="${image_tags}, ghcr.io/${{ github.repository_owner }}/oceanbase-ce:latest"
            image_tags="${image_tags}, ${{ vars.DOCKER_PUSH_BASE }}/oceanbase-ce:latest"
            image_tags="${image_tags}, quay.io/${{ vars.QUAY_IO_PUSH_BASE }}/oceanbase-ce:latest"
          fi
          
          echo "image tags: ${image_tags}"
          echo "tags=${image_tags}" >> $GITHUB_OUTPUT

      - name: Build and push observer image
        if: ${{ inputs.push-images }}
        uses: docker/build-push-action@v6
        with:
          context: ./oceanbase-ce
          platforms: linux/amd64,linux/arm64
          file: ./oceanbase-ce/Dockerfile
          push: true
          tags: ${{ steps.set_image_tags.outputs.tags }}
          build-args: |
            VERSION=${{ inputs.version }}
